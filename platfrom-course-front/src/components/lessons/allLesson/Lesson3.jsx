import "./Lesson.scss";
import { LessonBtn } from "./LessonBtn";

export const Lesson3 = ( {lessonId, groupId} ) => {

    return(
        <div className="lesson-block">
            <h1 className="title-h1">Git, Github.</h1>
            <div className="main-block">
                <div className="content">
                    <h3 className="content__title-h3">Привіт, сьогодні ми розберемо що таке git, github, github desktop.</h3>
                </div>
                <div className="content">
                    <h3 className="content__title-h3">Що таке Git?</h3>
                    <div className="content__block">
                        <p className="content__paragraph">Гіт - це інструмент для зберігання та відстежування історії змін у вашому програмному коді. Він дозволяє вам зберігати різні версії вашого проекту, які можна порівнювати між собою. Якщо ви змінили код і щось зламали, ви можете легко повернутися до попередньої, працездатної версії. Гіт також допомагає спільно працювати над проектом з іншими програмістами, об'єднуючи їх зміни та вирішуючи можливі конфлікти. Таким чином, він робить розробку програм більш організованою і безпечною.</p>
                    </div>
                </div>
                <div className="content">
                    <h3 className="content__title-h3">Що таке Github?</h3>
                    <div className="content__block">
                        <p className="content__paragraph">Гітхаб (GitHub) - це веб-платформа для роботи з системою керування версіями Git і спільної роботи над програмними проектами. Вона надає сервіс для зберігання, спільного ведення і відстежування коду, а також спрощує співпрацю програмістів над проектами.</p>
                        <p className="content__paragraph">Основні можливості GitHub включають:</p>
                        <p className="content__paragraph">-Зберігання коду: GitHub дозволяє завантажувати та зберігати ваш код у вигляді репозиторіїв, які можуть бути легко керовані та організовані.</p>
                        <p className="content__paragraph">-Спільна робота: Ви можете запрошувати інших програмістів до своїх проектів, дозволяючи їм працювати над кодом разом з вами. Це спрощує колективну роботу над програмними проектами.</p>
                        <p className="content__paragraph">-Відстеження змін: GitHub дозволяє відстежувати історію змін у коді, коментувати зміни та вирішувати конфлікти, які можуть виникнути при спільній роботі декількох програмістів.</p>
                        <p className="content__paragraph">-Проблеми та завдання: Ви можете створювати задачі та відстежувати проблеми, пов'язані з вашим проектом, щоб організувати роботу та вирішити поточні завдання.</p>
                        <p className="content__paragraph">-Інтеграція з іншими сервісами: GitHub інтегрується з багатьма іншими інструментами розробки, такими як CI/CD (Continuous Integration/Continuous Deployment) системи, що дозволяє   автоматизувати процеси тестування та розгортання вашого програмного коду.</p>
                        <p className="content__paragraph">-За допомогою GitHub, програмісти можуть спільно працювати над проектами, вносити зміни у код, відстежувати історію роботи та спрощувати керування програмними проектами.</p>
                    </div>
                </div>
                <div className="content">
                    <h3 className="content__title-h3">GitHub Desktop.</h3>
                    <div className="content__block">
                        <p className="content__paragraph">GitHub Desktop - це спеціальна програма, яка допомагає працювати з проектами на платформі GitHub (сервіс для зберігання і спільної роботи над кодом). Головна перевага GitHub Desktop - це те, що вона має графічний інтерфейс, тобто ви можете взаємодіяти з нею за допомогою миші та кнопок, а не вводячи команди в командному рядку (bash).</p>
                        <p className="content__paragraph">Основна причина використання GitHub Desktop замість командного рядка (bash) - це зручність та доступність для людей, які не зовсім знайомі з командами Git. За допомогою графічного інтерфейсу GitHub Desktop ви можете легко створювати, клонувати та керувати репозиторіями, вносити зміни та бачити історію роботи без необхідності вивчати складні команди Git.</p>
                        <p className="content__paragraph">Звісно, для досвідчених користувачів Git, командний рядок (bash) залишається потужним інструментом з більшими можливостями, але GitHub Desktop робить процес роботи з Git більш простим та зрозумілим для початківців і тих, хто віддає перевагу графічному інтерфейсу.</p>
                        <a className="link" target="blank" href="https://www.youtube.com/watch?v=hyUBMmL0WtA&t=786s&ab_channel=GloAcademy">Відео по GitHub Desktop</a>
                    </div>
                </div>
                <div className="content">
                    <h3 className="content__title-h3">Терміни по гіту.</h3>
                    <div className="content__block">
                        <p className="content__paragraph">Комміт (Commit): Комміт - це фіксація змін, яку ви робите у своєму коді. Це як "зберегти" у редакторі тексту, але для програмного коду. Коли ви робите комміт, ви робите зміни постійними і записуєте їх у історію проекту.</p>
                        <p className="content__paragraph">Pull Request (PR): Pull Request - це запит на об'єднання змін, які ви внесли в одну гілку коду у іншу. Ви створюєте PR, щоб запропонувати ваші зміни для перевірки та об'єднання у основну частину проекту. Інші можуть переглянути ваші зміни та коментувати їх, а після схвалення змін PR може бути об'єднаний (merged).</p>
                        <p className="content__paragraph">Гілка (Branch): Гілка - це копія вашого коду, яку ви можете створити для роботи над конкретним завданням або функцією. Вона дозволяє вам вносити зміни у коді, не впливаючи на основний код. Після завершення роботи над завданням ви можете об'єднати (merge) гілку з основною гілкою, щоб додати ваші зміни до проекту.</p>
                        <p className="content__paragraph">Ці три основні терміни допомагають організувати роботу з кодом у Git та спрощують спільну роботу над проектами.</p>
                    </div>
                </div>
                <div className="content">
                    <h2 className="content__title-h3">Домашнє завдання.</h2>
                    <div className="content__block">
                        <p className="content__paragraph">1. Створити репозиторій гіт. Зробити головну вітку з шаблоном проекта. Зробити від неї гілку з домашнім завданням( закинути свою минулу домашку).</p>
                    </div>
                    
                </div>
            </div>
            <LessonBtn lessonId={lessonId} groupId={groupId}></LessonBtn>
        </div>    
    )
}

export default Lesson3